.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FEBOOTSTRAP-TO-SUPERMIN 8"
.TH FEBOOTSTRAP-TO-SUPERMIN 8 "2010-09-17" "febootstrap-2.9" "Virtualization Support"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
febootstrap\-to\-supermin \- Convert febootstrap root to supermin appliance.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& febootstrap\-to\-supermin DIR supermin.img hostfiles.txt
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fIfebootstrap-to-supermin\fR converts the filesystem created by
\&\fIfebootstrap\fR\|(8) into a supermin appliance.  The term \*(L"supermin
appliance\*(R" is described in the documentation below.  First you should
be familiar with \fIfebootstrap\fR\|(8) and \fIfebootstrap\-to\-initramfs\fR\|(8).
.SH "PARAMETERS"
.IX Header "PARAMETERS"
\&\f(CW\*(C`DIR\*(C'\fR is the directory created by febootstrap (ie. the output of
febootstrap and the input to this program).
.PP
\&\f(CW\*(C`supermin.img\*(C'\fR is the name of the supermin appliance that this
program creates, and \f(CW\*(C`hostfiles.txt\*(C'\fR is the name of the list of
hostfiles that this program creates.  (ie. the outputs of this
program).
.SH "SUPERMIN APPLIANCE"
.IX Header "SUPERMIN APPLIANCE"
A supermin appliance is a very specialized, highly minimized
appliance which can be reconstructed on-the-fly at runtime into
an ordinary (initramfs) appliance.
.PP
The normal appliance is a self-contained Linux operating system, based
on the Fedora/RHEL/CentOS Linux distro.  So it contains a complete
copy of all the libraries and programs needed, like kernel, libc,
bash, coreutils etc etc.
.PP
The supermin appliance removes the kernel and all the executable
libraries and programs from the appliance.  That just leaves a
skeleton of directories, config files and some data files, which is
obviously massively smaller than the normal appliance.  At runtime we
rebuild the appliance on-the-fly from the libraries and programs on
the host (eg. pulling in the real /lib/libc.so, the real /bin/bash
etc.)
.PP
Although this process of rebuilding the appliance each time sounds
slow, it turns out to be faster than using a prebuilt appliance.
(Most of the saving comes from not compressing the appliance \- it
transpires that decompressing the appliance is the slowest part of the
whole boot sequence).  On my machine, a new appliance can be built in
under a fifth of a second, and the boot time is several seconds
shorter.
.PP
The big advantage of the supermin appliance for distributions like
Fedora is that it gets security fixes automatically from the host, so
there is no need to rebuild the whole appliance for a security update
in some underlying library.
.PP
There are several \fIdisadvantages\fR:
.PP
It won't work at all except in very narrow, controlled cases like the
Fedora packaging case.  We control the dependencies of the appliance
\&\s-1RPM\s0 tightly to ensure that the required binaries are actually present
on the host.
.PP
Furthermore there are certain unlikely changes in the packages on the
host which could break a supermin appliance, eg. an updated library
which depends on an additional data file.
.PP
Also supermin appliances are subjected to changes in the host kernel
which might break compatibility with qemu \*(-- these are, of course,
real bugs in any case.
.PP
Lastly, supermin appliances really can't be moved between branches of
distributions (eg. built on Fedora 12 and moved to Fedora 10) because
they are not self-contained and they rely on certain libraries being
around.  You shouldn't do this anyway.
.PP
Use supermin appliances with caution.
.SS "\s-1ANATOMY\s0 \s-1OF\s0 A \s-1SUPERMIN\s0 \s-1APPLIANCE\s0"
.IX Subsection "ANATOMY OF A SUPERMIN APPLIANCE"
A supermin appliance consists usually of just two files, but can
contain several files and directories from the list below:
.IP "supermin.img" 4
.IX Item "supermin.img"
The image file (conventionally called \f(CW\*(C`supermin.img\*(C'\fR, but you can
call it anything you want) is the skeleton initramfs.  This is like an
initramfs built by \fIfebootstrap\-to\-initramfs\fR\|(8), but all libraries
and binaries are removed.
.Sp
Note that this file is a cpio file in cpio \*(L"newc\*(R" format, and is
\&\fInot\fR compressed (unlike initramfs files which are compressed cpio
files).
.IP "hostfiles.txt" 4
.IX Item "hostfiles.txt"
This plain text file contains a list of files that we need to add back
from the host at runtime.  ie. It's the list of libraries and binaries
that we removed when we constructed \f(CW\*(C`supermin.img\*(C'\fR.
.Sp
This file usually contains wildcards.  This is because we don't
want the file to break on minor updates to libraries, so for example
instead of listing
.Sp
.Vb 1
\& lib64/libreadline.so.6.1.2
.Ve
.Sp
the file contains
.Sp
.Vb 1
\& lib64/libreadline.so.6.*
.Ve
.IP "any directory" 4
.IX Item "any directory"
You can specify a directory which should contain image file(s)
and hostfile(s).
.Sp
Using a directory is useful either to keep the appliance-related files
together, or to make more complex appliances containing optional bits.
.SS "\s-1RECONSTRUCTING\s0 \s-1AN\s0 \s-1INITRAMFS\s0 \s-1FROM\s0 A \s-1SUPERMIN\s0 \s-1APPLIANCE\s0"
.IX Subsection "RECONSTRUCTING AN INITRAMFS FROM A SUPERMIN APPLIANCE"
The program \fIfebootstrap\-supermin\-helper\fR\|(8) can be used to
reconstruct a full initramfs from \f(CW\*(C`supermin.img\*(C'\fR and \f(CW\*(C`hostfiles.txt\*(C'\fR
(plus, naturally, the required programs and libraries in the host
filesystem).
.PP
See that man page for details.
.SS "\s-1RESTRICTION:\s0 \s-1UNREADABLE\s0 \s-1BINARIES\s0 \s-1ON\s0 \s-1THE\s0 \s-1HOST\s0"
.IX Subsection "RESTRICTION: UNREADABLE BINARIES ON THE HOST"
Some binaries on the host are not publically readable.  For example:
.PP
.Vb 4
\& $ ll /usr/libexec/pt_chown 
\& \-rws\-\-x\-\-x 1 root root 28418 2009\-09\-28 13:42 /usr/libexec/pt_chown
\& $ ll /usr/bin/chsh 
\& \-rws\-\-x\-\-x 1 root root 18072 2009\-10\-05 16:28 /usr/bin/chsh
.Ve
.PP
These binaries cause a problem when reconstructing the supermin
appliance, because we'd like to copy them into the final appliance,
and usually that process is done as non-root.  Currently the only
solution is that you should remove these problematic binaries from the
appliance.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Create a basic Fedora directory and turn it into a supermin image.
.PP
\&\fI\s-1NB\s0\fR You must only build \*(L"Rawhide on Rawhide\*(R".  If using another
Fedora branch, you must change \f(CW\*(C`rawhide\*(C'\fR below as appropriate, eg to
\&\f(CW\*(C`fedora\-12\*(C'\fR.
.PP
.Vb 2
\& $ febootstrap rawhide /tmp/fedora
\& $ febootstrap\-to\-supermin /tmp/fedora supermin.img hostfiles.txt
.Ve
.PP
Examine the resulting files:
.PP
.Vb 2
\& $ cpio \-itv < supermin.img | less
\& $ less hostfiles.txt
.Ve
.PP
Reconstruct the final kernel and initramfs.
.PP
\&\fI\s-1NB\s0\fR The first time you run this, it will be slow because the
required host files are not in cache.  With a \*(L"hot cache\*(R" it should be
lightning fast.  Run it several times to get representative timings.
.PP
.Vb 2
\& $ febootstrap\-supermin\-helper supermin.img hostfiles.txt \e
\&     /tmp/kernel /tmp/initrd
.Ve
.PP
You would boot the final image like this, although in this example it
probably won't work unless you add a \f(CW\*(C`/init\*(C'\fR file to the appliance
(see the discussion in \fIfebootstrap\-to\-initramfs\fR\|(8)).
.PP
.Vb 1
\& $ qemu \-m 1024 \-kernel /tmp/kernel \-initrd /tmp/initrd [etc...]
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIfebootstrap\fR\|(8),
\&\fIfebootstrap\-to\-initramfs\fR\|(8),
\&\fIfebootstrap\-supermin\-helper\fR\|(8).
.SH "AUTHORS"
.IX Header "AUTHORS"
Richard W.M. Jones <rjones @ redhat . com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
(C) Copyright 2009\-2010 Red Hat Inc.,
<http://people.redhat.com/~rjones/febootstrap>.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, \s-1MA\s0 02139, \s-1USA\s0.
